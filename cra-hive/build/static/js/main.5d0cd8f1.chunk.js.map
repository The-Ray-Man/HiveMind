{"version":3,"sources":["shared/model/stone.ts","client/canvas/Stone.jsx","client/canvas/GLTFModel.jsx","client/canvas/HighlightStone.jsx","client/canvas/Hive.tsx","client/controllers/interactiveController.ts","client/game/LocalGame.tsx","client/game/useHiveGame.tsx","client/components/DropInsectMenu.tsx","client/components/GameOverModal.tsx","client/game/GenericGame.tsx","shared/hexlib.ts","client/lab/useCanvas.tsx","client/lab/Canvas.tsx","client/lab/BackgroundCanvas.tsx","client/components/GameList.tsx","client/pages/WelcomePage.tsx","client/components/WelcomeInsect.tsx","client/pages/AboutPage.tsx","client/lab/TestHive.js","client/lab/TestGame.tsx","client/pages/DebugPage.tsx","client/components/CreateGameModal.tsx","client/pages/Layout.tsx","client/App.tsx","index.js","shared/model/insects.ts","shared/model/teams.ts","shared/model/action.ts","shared/hashmap.ts","shared/model/hive.ts","shared/model/state.ts"],"names":["Stone","insect","team","this","stone","layout","HEX","hex","handleClick","height","teamColor","Team","WHITE","mesh","useRef","useState","hovered","setHover","x","y","orientation","spring","useSpring","color","rotation","Math","PI","fallback","position","onClick","ref","onPointerOver","event","onPointerOut","args","meshStandardMaterial","GLTFModel","props","scene","useLoader","GLTFLoader","Insect","BEE","clone","primitive","object","HighlightStone","console","log","opacity","transparent","Hive","hive","highlighted","interactive","setLayout","stones","map","keys","get","forEach","push","highlights","style","camera","near","far","TrackballControls","Button","useInteractiveController","submitAction","state","actionType","setActionType","selected","setSelected","getDestinations","handleBoardClick","newAction","constructor","allowedToMove","Move","handleDropClick","allowedToDrop","Drop","LocalGame","p1","p2","useHiveGame","apply","player","turnNumber","action","isLegal","controller","history","setHistory","State","setState","index","setIndex","undo","reset","DropInsectMenuTeam","teamThis","active","i","counts","hasOwnProperty","iconMap","beetle","bee","spider","grasshopper","ant","Array","from","Object","values","count","isActive","as","disabled","labelPosition","icon","Label","basic","pointing","DropInsectMenu","Container","Group","size","BLACK","GameOverModal","open","result","whiteDone","blackDone","tie","whiteWin","Modal","dimmer","Header","Content","Actions","negative","Link","to","GenericGame","gameOver","_stones","bind","Point","Hex","q","r","s","round","Error","hex_compare","a","b","hex_add","hex_subtract","hex_scale","k","hex_directions","hex_neighbors","d","delta","hex_neighbor","hex_circle_iterator","neighbors","hex_diagonals","hex_distance","abs","hex_round","h","qi","ri","si","q_diff","r_diff","s_diff","hex_lerp","t","OffsetCoord","col","row","ODD","qoffset_from_cube","offset","qoffset_to_cube","roffset_from_cube","roffset_to_cube","DoubledCoord","qdoubled_from_cube","qdoubled_to_cube","rdoubled_from_cube","rdoubled_to_cube","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","Layout","origin","orientation_pointy","sqrt","orientation_flat","hex_to_pixel","M","pixel_to_hex","p","pt","hex_corner_offset","corner","angle","cos","sin","polygon_corners","corners","center","layoutFlat","layoutPointy","complain","name","equal_hex","equal_offsetcoord","equal_doubledcoord","equal_int","test_hex_direction","test_hex_diagonal","test_hex_rotate_right","test_hex_rotate_left","test_hex_linedraw","length","equal_hex_array","N","a_nudge","b_nudge","results","step","max","hex_linedraw","c","test_hex_round","flat","pointy","test_layout","test_offset_roundtrip","test_doubled_roundtrip","useCanvas","draw","options","fps","canvasRef","useEffect","animationFrameId","canvas","current","context","getContext","frameCount","render","resizeCanvasToDisplaySize","resizeCanvas","setTimeout","window","requestAnimationFrame","cancelAnimationFrame","getBoundingClientRect","width","devicePixelRatio","ratio","scale","Canvas","display","top","left","zIndex","BackgroundCanvas","ctx","clearRect","fillStyle","actions","floor","random","beginPath","moveTo","lineTo","fill","GameList","games","setGames","fetch","then","resp","json","data","catch","err","gid","pathname","search","WelcomePage","WelcomeInsect","right","AboutPage","src","title","border","Wrapped","counter","setCounter","iterationSteps","setIterationSteps","value","onChange","e","target","JSON","stringify","Test","InteractiveRandom","DebugPage","TestGame","CreateGameModal","setOpen","gameMode","setGameMode","setTeam","Form","Field","Or","inverted","positive","location","uuid","method","setActive","createGameModalOpen","setCreateGameModalOpen","Segment","Menu","compact","stackable","secondary","Item","header","alt","Icon","children","GameManager","lazy","App","exact","path","component","ReactDOM","StrictMode","document","getElementById","destination","compareAction","Pass","HashMap","Map","key","set","delete","has","arr","res","pop","parse","HashSet","Set","add","val","root","ar","whiteLost","blackLost","filter","n","ignore","start","visited","distance","queue","vertex","shift","generateSingleWalks","generateWalks","hh","concat","ha","hb","hc","every","at","candidates","_checkNeighborTeam","lowLink","articulation_points","undefined","dfs","node","parent","min","call","SPIDER","generateSpiderWalks","ANT","GRASSHOPPER","generateJumps","BEETLE","generateClimbs","_oneHive","generateMovesFrom","dest","_beeMove","_actions","startingInsects","some","gameResult","generateDrops","opts","dropStonesForTeam","uniqueInsects","dropStones","moveAllowed","dropHex","dropInsect","generateMoves","_getActions","otherAction","removeStone","addStone","splice","policy","randomPolicy"],"mappings":"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","file":"static/js/main.5d0cd8f1.chunk.js","sourcesContent":["import Insect from './insects';\nimport Team from './teams';\n\nexport default class Stone {\n  insect: Insect;\n  team: Team;\n\n  constructor(insect: Insect, team: Team) {\n    this.insect = insect;\n    this.team = team;\n  }\n}\n\n","import { useRef, useState, Suspense } from 'react'\nimport { useSpring, animated } from '@react-spring/three'\n\nimport * as HEX from '../../shared/hexlib'\nimport { GLTFModel } from './GLTFModel'\nimport Team from '../../shared/model/teams'\n\nexport default function Stone({stone, layout=HEX.layoutFlat, hex, handleClick=()=>{}, height=0}) {\n    const teamColor = stone.team === Team.WHITE ? 'red' : 'blue';\n    const mesh = useRef(null);\n    const [hovered, setHover] = useState(false)\n    const { x, y } = HEX.hex_to_pixel(layout, hex);\n    const orientation = layout.orientation;\n\n    const spring = useSpring({\n        color: hovered ? 'grey' : teamColor,\n        rotation: hovered ? [0, Math.PI, 0] : [0, 0, 0]\n    });\n\n    return (\n        <Suspense fallback={null}>\n            <group\n                position={[x, y, height]}\n                rotation={[Math.PI / 2, orientation === HEX.orientation_flat ? Math.PI / 6 : 0, 0]}\n                onClick={() => {handleClick(hex)}}\n            >\n                <animated.mesh\n                    position={[0, -.5, 0]}\n                    ref={mesh}\n                    onPointerOver={(event) => setHover(true)}\n                    onPointerOut={(event) => setHover(false)}\n                >\n                    <cylinderBufferGeometry args={[1, 1, 0.25, 6]} />\n                        <animated.meshStandardMaterial color={spring.color} />\n                </animated.mesh>\n                <GLTFModel insect={stone.insect} rotation={spring.rotation} />\n            </group>\n        </Suspense>\n    )\n}\n","// https://docs.pmnd.rs/react-three-fiber/tutorials/loading-models\n\nimport { useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport Insect from '../../shared/model/insects'\n\nimport { animated } from '@react-spring/three'\n\nexport function GLTFModel({insect, ...props}) {\n    const gltf = useLoader(GLTFLoader,`/objects/${insect}/${insect === Insect.BEE ? 'bumblebee' : insect}.gltf` );\n    const scene = gltf.scene.clone();\n    return <animated.primitive object={scene} {...props}/>\n}\n\n\nexport const modelFactory = (insect, ...props) => {\n    return  <GLTFModel insect={insect} {...props} />\n}\n\n","import { useRef, useState } from 'react'\nimport { useSpring, animated } from '@react-spring/three'\n\nimport Team from '../../shared/model/teams'\nimport * as HEX from '../../shared/hexlib'\n\nexport default function HighlightStone({ layout, hex, team, height, handleClick=()=>console.log(\"no Click handler given\") }) {\n    const mesh = useRef(null)\n    const [hovered, setHover] = useState(false)\n    const { opacity } = useSpring({opacity: hovered ? 0.9 : 0.3})\n    const { x, y } = HEX.hex_to_pixel(layout, hex);\n    const orientation = layout.orientation;\n    const color = team === Team.WHITE ? 'red' : 'blue';\n    return (\n                <mesh\n                    position={[x, y, height - .5]}\n                    rotation={[Math.PI / 2, orientation === HEX.orientation_flat ? Math.PI / 6 : 0, 0]}\n                    onClick={() => {handleClick(hex)}}\n                    ref={mesh}\n                    onPointerOver={(event) => setHover(true)}\n                    onPointerOut={(event) => setHover(false)}\n                >\n                    <cylinderBufferGeometry args={[1, 1, 0.25, 6]} />\n                        <animated.meshStandardMaterial color={color} transparent opacity={opacity}/>\n                </mesh>\n    )\n}\n","import { useState } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { TrackballControls } from '@react-three/drei'\n\nimport * as HEX from '../../shared/hexlib'\n\nimport Stone from './Stone'\nimport HighlightStone from './HighlightStone'\n\nimport { Button } from 'semantic-ui-react'\n\nconst Hive = ({ hive, handleClick=()=>console.log(\"No click handler given\"), highlighted=[], team=null, interactive=true }) => {\n    const [layout, setLayout] = useState(HEX.layoutFlat)\n    let stones = [];\n    for (const hex of hive.map.keys()) {\n        hive.map.get(hex).forEach((stone, height) => {\n            stones.push(\n                <Stone\n                    hex={hex}\n                    stone={stone}\n                    height={height}\n                    layout={layout}\n                    handleClick={handleClick} />\n            )\n        });\n    }\n    const highlights = [];\n    highlighted.forEach(([hex, height]) => {\n        highlights.push(<HighlightStone \n        layout={layout}\n        hex={hex}\n        team={team}\n        handleClick={handleClick}\n        height={height}/>);\n    });\n\n    return (\n        <div style={{ position: \"relative\", height: '50vw' }}>\n            <Canvas camera={{ near: 0.1, far: 100 }} >\n                {  interactive ? <TrackballControls /> : null}\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                {stones}\n                {highlights}\n            </Canvas>\n            <Button onClick={() => setLayout(layout === HEX.layoutFlat ? HEX.layoutPointy : HEX.layoutFlat)}> Toggle Layout </Button>\n        </div>\n    )\n}\n\nexport default Hive;\n","import { useState } from 'react'\nimport { Move, Drop } from '../../shared/model/action';\nimport Stone from '../../shared/model/stone';\n\n\nexport function useInteractiveController(submitAction, state): any {\n    const [actionType, setActionType] = useState(null);\n    const [selected, setSelected] = useState(null);\n    const handleBoardClick = (hex) => {\n        if (selected) {\n            const newAction = new actionType.constructor(selected, hex);\n            if (submitAction(newAction)) {\n                setSelected(null);\n                setActionType(null);\n            } else {\n                setSelected(null);\n            }\n        } else {\n            if (state.allowedToMove(hex)) {\n                setActionType(new Move());\n                setSelected(hex);\n            }\n        }\n    }\n    const handleDropClick =  (insect) => {\n        if (state.allowedToDrop(insect)) {\n            setActionType(new Drop());\n            setSelected(new Stone(insect, state.team));\n        } else {\n            setSelected(null);\n        }\n    }\n    const highlighted = selected ? state.getDestinations(actionType, selected) : [];\n    return {\n        highlighted: highlighted,\n        handleBoardClick: handleBoardClick,\n        handleDropClick: handleDropClick\n    }\n}\n","import GenericGame from \"./GenericGame\";\nimport useHiveGame from \"./useHiveGame\";\n\nexport default function LocalGame({ p1, p2 }) {\n    const {state, apply} = useHiveGame();\n\n    const submitAction = (action) => {\n            if (state.isLegal(action)) {\n                apply(action);\n                return true;\n            }\n            return false;\n    };\n\n    const player = ((state.turnNumber % 2 === 0) ? p1 : p2)(submitAction, state)\n    return <GenericGame \n        state={state}\n        controller={player} />\n}\n","import { useState } from 'react';\n\nimport { State } from '../../shared/model/state'\nimport { Action } from '../../shared/model/action';\n\nexport default function useHiveGame() {\n    const [history, setHistory] = useState([]);\n    const [state, setState] = useState(new State());\n    const [index, setIndex] = useState(0);\n\n    const apply = (action: Action) => {\n        history[index] = action;\n        setHistory(history);\n        setState(state.apply(action));\n        setIndex(index + 1);\n    }\n    const undo = () => {\n        const action = history[index]\n        setState(state.undo(action));\n        setIndex(index - 1)\n    }\n    const reset = () => {\n        setHistory([]);\n        setState(new State());\n        setIndex(0);\n    }\n    return {apply, undo, state, reset}\n    \n}\n","import { useRef, Suspense, useState } from 'react'\nimport Team from '../../shared/model/teams'\nimport Insect from '../../shared/model/insects'\nimport { Canvas } from '@react-three/fiber'\nimport { GLTFModel } from '../canvas/GLTFModel'\n\nimport { Button, Container, Label } from 'semantic-ui-react'\n\nimport { useSpring } from '@react-spring/three'\n\nexport function DropInsect({ insect, selected }) {\n    const mesh = useRef<THREE.Mesh>(null!)\n    const { rotation, scale } = useSpring({\n        rotation: selected ? [0, 0, 0] : [Math.PI / 2, 0, 0],\n        scale: selected ? 4 : 2\n    });\n    return (\n        <Suspense fallback={<p> {insect} </p>} >\n            <Canvas >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n\n                <group position={[0, 3, 0]}>\n                    <mesh ref={mesh} >\n                        <boxGeometry args={[4, 4, 1]} />\n                        <meshStandardMaterial transparent opacity={0} />\n                    </mesh>\n                    <GLTFModel\n                        scale={scale}\n                        insect={insect}\n                        rotation={rotation}\n                    />\n                </group>\n            </Canvas>\n        </Suspense>\n    )\n}\n\nexport function DropInsectMenuTeam({ stones, active, handleClick, allowedToDrop = (i) => true }) {\n    // Get the numbers out\n    const [, setSelected] = useState(null);\n    const counts = {};\n    let teamThis;\n    for (const { insect, team } of stones) {\n        teamThis = team;\n        if (counts.hasOwnProperty(insect)) counts[insect]++;\n        else counts[insect] = 1;\n    }\n    const iconMap = {\n        beetle: 'bug',\n        bee: 'chess queen',\n        spider: 'chess pawn',\n        grasshopper: 'chess knight',\n        ant: 'chess bishop'\n    }\n    return (<>\n        {Array.from(Object.values(Insect)).map((insect, i) => {\n            const count = counts[insect];\n            const isActive = active && allowedToDrop(insect)\n            const color = teamThis === 'white' ? 'red' : 'blue'\n            return (\n                        <Button as='div'\n                            key={insect}\n                            disabled={!isActive}\n                            labelPosition='right'\n                            onClick={() => {\n                                handleClick(insect)\n                                setSelected(insect)\n                            }}\n                        >\n                            <Button color={color} icon={iconMap[insect]} />\n                            <Label as='a' basic pointing='left'>\n                             {count || 0}\n                            </Label>\n                        </Button>\n            )\n        })\n        }\n    </>\n    )\n}\n\nexport function DropInsectMenu({ stones, team, handleClick = () => console.log(\"No click handler given\"), allowedToDrop }) {\n    return (\n        <Container>\n            <Button.Group size='tiny'>\n                <DropInsectMenuTeam\n                    active={team === Team.BLACK}\n                    stones={stones.get(Team.BLACK)}\n                    handleClick={team === Team.BLACK ? handleClick : () => { }}\n                    allowedToDrop={allowedToDrop}\n                />\n            </Button.Group>\n            <Button.Group size='tiny'>\n                <DropInsectMenuTeam\n                    active={team === Team.WHITE}\n                    stones={stones.get(Team.WHITE)}\n                    handleClick={team === Team.WHITE ? handleClick : () => { }}\n                    allowedToDrop={allowedToDrop}\n                />\n            </Button.Group>\n        </Container>\n    )\n\n}\n","import { Button, Modal } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nexport default function GameOverModal({ open, result }) {\n    const [whiteDone, blackDone] = result;\n    const tie = whiteDone && blackDone;\n    const whiteWin = blackDone && blackDone !== whiteDone;\n    return (\n        <Modal\n            dimmer='blurring'\n            open={open}\n        >\n            <Modal.Header> Game Over !</Modal.Header>\n            <Modal.Content>\n            {\n                tie ? \"It's a tie!\" : (whiteWin ? 'Team RED wins' : 'Team BLUE wins')\n            }\n            </Modal.Content>\n            <Modal.Actions>\n                <Button negative as={Link} to='/'> \n                    Leave\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}\n","import Hive from '../canvas/Hive'\nimport { DropInsectMenu } from '../components/DropInsectMenu'\nimport GameOverModal from '../components/GameOverModal';\n\nexport default function GenericGame({ state, controller }) {\n    const {highlighted, handleBoardClick, handleDropClick} = controller;\n    return (\n            <div>\n                <GameOverModal open={state.gameOver} result={state.result} />\n                <DropInsectMenu\n                    stones={state._stones}\n                    team={state.team}\n                    handleClick={handleDropClick}\n                    allowedToDrop={state.allowedToDrop.bind(state)} />\n                <Hive\n                    hive={state.hive}\n                    handleClick={handleBoardClick}\n                    highlighted={highlighted}\n                    team={state.team} />\n            </div>\n    )\n}","// Generated code -- CC0 -- No Rights Reserved -- http://www.redblobgames.com/grids/hexagons/\n\nexport interface Hex {\n  q: number;\n  r: number;\n  s: number;\n}\nexport function Point(x, y) {\n  return { x: x, y: y };\n}\n// eslint-disable-next-line\nexport function Hex(q:number , r: number, s?: number) {\n  s = - (q + r)\n  if (Math.round(q + r + s) !== 0) throw Error(\"q + r + s must be 0\");\n  return { q: q, r: r, s: s };\n}\n\nexport function hex_compare(a, b) {\n  return a.q === b.q && a.r === b.r\n}\n\nexport function hex_add(a, b) {\n  return Hex(a.q + b.q, a.r + b.r, a.s + b.s);\n}\n\nexport function hex_subtract(a, b) {\n  return Hex(a.q - b.q, a.r - b.r, a.s - b.s);\n}\n\nexport function hex_scale(a, k) {\n  return Hex(a.q * k, a.r * k, a.s * k);\n}\n\nexport function hex_rotate_left(a) {\n  return Hex(-a.s, -a.q, -a.r);\n}\n\nfunction hex_rotate_right(a) {\n  return Hex(-a.r, -a.s, -a.q);\n}\n\nexport const hex_directions = [\n    Hex(1, 0, -1),\n    Hex(1, -1, 0),\n    Hex(0, -1, 1),\n    Hex(-1, 0, 1),\n    Hex(-1, 1, 0),\n    Hex(0, 1, -1)\n];\n\nfunction hex_direction(direction) {\n  return hex_directions[direction];\n}\n\nfunction hex_neighbor(hex, delta) {\n  return hex_add(hex, delta);\n}\n\nexport function hex_neighbors(hex) {\n  return hex_directions.map(d => hex_neighbor(hex, d))\n}\nexport function hex_circle_iterator(hex) {\n  const neighbors = hex_neighbors(hex);\n  let result = [];\n  for (let i = 0; i < 6; i++) {\n    result.push([neighbors[i], neighbors[(i + 1) % 6], neighbors[(i + 2) % 6]]);\n  }\n  return result;\n}\n\nconst hex_diagonals = [\n    Hex(2, -1, -1),\n    Hex(1, -2, 1),\n    Hex(-1, -1, 2),\n    Hex(-2, 1, 1),\n    Hex(-1, 2, -1),\n    Hex(1, 1, -2)\n];\n\nfunction hex_diagonal_neighbor(hex, direction) {\n  return hex_add(hex, hex_diagonals[direction]);\n}\n\nfunction hex_length(hex) {\n  return (Math.abs(hex.q) + Math.abs(hex.r) + Math.abs(hex.s)) / 2;\n}\n\nfunction hex_distance(a, b) {\n  return hex_length(hex_subtract(a, b));\n}\n\nexport function hex_round(h) {\n  let qi = Math.round(h.q);\n  let ri = Math.round(h.r);\n  let si = Math.round(h.s);\n  const q_diff = Math.abs(qi - h.q);\n  const r_diff = Math.abs(ri - h.r);\n  const s_diff = Math.abs(si - h.s);\n  if (q_diff > r_diff && q_diff > s_diff) {\n    qi = -ri - si;\n  }\n  else\n    if (r_diff > s_diff) {\n      ri = -qi - si;\n    }\n    else {\n      si = -qi - ri;\n    }\n  return Hex(qi, ri, si);\n}\n\nfunction hex_lerp(a, b, t) {\n  return Hex(a.q * (1.0 - t) + b.q * t, a.r * (1.0 - t) + b.r * t, a.s * (1.0 - t) + b.s * t);\n}\n\nfunction hex_linedraw(a, b) {\n  const N = hex_distance(a, b);\n  const a_nudge = Hex(a.q + 1e-06, a.r + 1e-06, a.s - 2e-06);\n  const b_nudge = Hex(b.q + 1e-06, b.r + 1e-06, b.s - 2e-06);\n  let results = [];\n  const step = 1.0 / Math.max(N, 1);\n  for (let i = 0; i <= N; i++) {\n    results.push(hex_round(hex_lerp(a_nudge, b_nudge, step * i)));\n  }\n  return results;\n}\n\n\n\n\nfunction OffsetCoord(col, row) {\n  return { col: col, row: row };\n}\n\nconst EVEN = 1;\nconst ODD = -1;\n\nfunction qoffset_from_cube(offset, h) {\n  const col = h.q;\n  const row = h.r + (h.q + offset * (h.q & 1)) / 2;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return OffsetCoord(col, row);\n}\n\nfunction qoffset_to_cube(offset, h) {\n  const q = h.col;\n  const r = h.row - (h.col + offset * (h.col & 1)) / 2;\n  const s = -q - r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return Hex(q, r, s);\n}\n\nfunction roffset_from_cube(offset, h) {\n  const col = h.q + (h.r + offset * (h.r & 1)) / 2;\n  const row = h.r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return OffsetCoord(col, row);\n}\n\nfunction roffset_to_cube(offset, h) {\n  const q = h.col - (h.row + offset * (h.row & 1)) / 2;\n  const r = h.row;\n  const s = -q - r;\n  if (offset !== EVEN && offset !== ODD) {\n    throw Error(\"offset must be EVEN (+1) or ODD (-1)\");\n  }\n  return Hex(q, r, s);\n}\n\n\n\n\nfunction DoubledCoord(col, row) {\n  return { col: col, row: row };\n}\n\nfunction qdoubled_from_cube(h) {\n  const col = h.q;\n  const row = 2 * h.r + h.q;\n  return DoubledCoord(col, row);\n}\n\nfunction qdoubled_to_cube(h) {\n  const q = h.col;\n  const r = (h.row - h.col) / 2;\n  const s = -q - r;\n  return Hex(q, r, s);\n}\n\nfunction rdoubled_from_cube(h) {\n  const col = 2 * h.q + h.r;\n  const row = h.r;\n  return DoubledCoord(col, row);\n}\n\nfunction rdoubled_to_cube(h) {\n  const q = (h.col - h.row) / 2;\n  const r = h.row;\n  const s = -q - r;\n  return Hex(q, r, s);\n}\n\n\n\n\nexport function Orientation(f0, f1, f2, f3, b0, b1, b2, b3, start_angle) {\n  return { f0: f0, f1: f1, f2: f2, f3: f3, b0: b0, b1: b1, b2: b2, b3: b3, start_angle: start_angle };\n}\n\n\n\n\nexport function Layout(orientation, size, origin) {\n  return { orientation: orientation, size: size, origin: origin };\n}\n\nexport const orientation_pointy = Orientation(Math.sqrt(3.0), Math.sqrt(3.0) / 2.0, 0.0, 3.0 / 2.0, Math.sqrt(3.0) / 3.0, -1.0 / 3.0, 0.0, 2.0 / 3.0, 0.5);\nexport const orientation_flat = Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0), 2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0, 0.0);\n\nexport function hex_to_pixel(layout, h) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const origin = layout.origin;\n  const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\n  const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\n  return Point(x + origin.x, y + origin.y);\n}\n\nexport function pixel_to_hex(layout, p) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const origin = layout.origin;\n  const pt = Point((p.x - origin.x) / size.x, (p.y - origin.y) / size.y);\n  const q = M.b0 * pt.x + M.b1 * pt.y;\n  const r = M.b2 * pt.x + M.b3 * pt.y;\n  return Hex(q, r, -q - r);\n}\n\nexport function hex_corner_offset(layout, corner) {\n  const M = layout.orientation;\n  const size = layout.size;\n  const angle = 2.0 * Math.PI * (M.start_angle - corner) / 6.0;\n  return Point(size.x * Math.cos(angle), size.y * Math.sin(angle));\n}\n\nexport function polygon_corners(layout, h) {\n  let corners = [];\n  const center = hex_to_pixel(layout, h);\n  for (let i = 0; i < 6; i++) {\n    const offset = hex_corner_offset(layout, i);\n    corners.push(Point(center.x + offset.x, center.y + offset.y));\n  }\n  return corners;\n}\n\nexport const layoutFlat = Layout(orientation_flat, Point(1, 1), Point(0, 0))\nexport const layoutPointy = Layout(orientation_pointy, Point(1, 1), Point(0, 0))\n\n\n// Tests\n\nfunction complain(name) {\n  console.log(\"FAIL\", name);\n}\n\nfunction equal_hex(name, a, b) {\n  if (!(a.q === b.q && a.s === b.s && a.r === b.r)) {\n    complain(name);\n  }\n}\n\nfunction equal_offsetcoord(name, a, b) {\n  if (!(a.col === b.col && a.row === b.row)) {\n    complain(name);\n  }\n}\n\nfunction equal_doubledcoord(name, a, b) {\n  if (!(a.col === b.col && a.row === b.row)) {\n    complain(name);\n  }\n}\n\nfunction equal_int(name, a, b) {\n  if (!(a === b)) {\n    complain(name);\n  }\n}\n\nfunction equal_hex_array(name, a, b) {\n  equal_int(name, a.length, b.length);\n  for (let i = 0; i < a.length; i++) {\n    equal_hex(name, a[i], b[i]);\n  }\n}\n\nfunction test_hex_arithmetic() {\n  equal_hex(\"hex_add\", Hex(4, -10, 6), hex_add(Hex(1, -3, 2), Hex(3, -7, 4)));\n  equal_hex(\"hex_subtract\", Hex(-2, 4, -2), hex_subtract(Hex(1, -3, 2), Hex(3, -7, 4)));\n}\n\nfunction test_hex_direction() {\n  equal_hex(\"hex_direction\", Hex(0, -1, 1), hex_direction(2));\n}\n\nfunction test_hex_diagonal() {\n  equal_hex(\"hex_diagonal\", Hex(-1, -1, 2), hex_diagonal_neighbor(Hex(1, -2, 1), 3));\n}\n\nfunction test_hex_distance() {\n  equal_int(\"hex_distance\", 7, hex_distance(Hex(3, -7, 4), Hex(0, 0, 0)));\n}\n\nfunction test_hex_rotate_right() {\n  equal_hex(\"hex_rotate_right\", hex_rotate_right(Hex(1, -3, 2)), Hex(3, -2, -1));\n}\n\nfunction test_hex_rotate_left() {\n  equal_hex(\"hex_rotate_left\", hex_rotate_left(Hex(1, -3, 2)), Hex(-2, -1, 3));\n}\n\nfunction test_hex_round() {\n  const a = Hex(0.0, 0.0, 0.0);\n  const b = Hex(1.0, -1.0, 0.0);\n  const c = Hex(0.0, -1.0, 1.0);\n  equal_hex(\"hex_round 1\", Hex(5, -10, 5), hex_round(hex_lerp(Hex(0.0, 0.0, 0.0), Hex(10.0, -20.0, 10.0), 0.5)));\n  equal_hex(\"hex_round 2\", hex_round(a), hex_round(hex_lerp(a, b, 0.499)));\n  equal_hex(\"hex_round 3\", hex_round(b), hex_round(hex_lerp(a, b, 0.501)));\n  equal_hex(\"hex_round 4\", hex_round(a), hex_round(Hex(a.q * 0.4 + b.q * 0.3 + c.q * 0.3, a.r * 0.4 + b.r * 0.3 + c.r * 0.3, a.s * 0.4 + b.s * 0.3 + c.s * 0.3)));\n  equal_hex(\"hex_round 5\", hex_round(c), hex_round(Hex(a.q * 0.3 + b.q * 0.3 + c.q * 0.4, a.r * 0.3 + b.r * 0.3 + c.r * 0.4, a.s * 0.3 + b.s * 0.3 + c.s * 0.4)));\n}\n\nfunction test_hex_linedraw() {\n  equal_hex_array(\"hex_linedraw\", [Hex(0, 0, 0), Hex(0, -1, 1), Hex(0, -2, 2), Hex(1, -3, 2), Hex(1, -4, 3), Hex(1, -5, 4)], hex_linedraw(Hex(0, 0, 0), Hex(1, -5, 4)));\n}\n\nfunction test_layout() {\n  const h = Hex(3, 4, -7);\n  const flat = Layout(orientation_flat, Point(10.0, 15.0), Point(35.0, 71.0));\n  equal_hex(\"layout\", h, hex_round(pixel_to_hex(flat, hex_to_pixel(flat, h))));\n  const pointy = Layout(orientation_pointy, Point(10.0, 15.0), Point(35.0, 71.0));\n  equal_hex(\"layout\", h, hex_round(pixel_to_hex(pointy, hex_to_pixel(pointy, h))));\n}\n\nfunction test_offset_roundtrip() {\n  const a = Hex(3, 4, -7);\n  const b = OffsetCoord(1, -3);\n  equal_hex(\"conversion_roundtrip even-q\", a, qoffset_to_cube(EVEN, qoffset_from_cube(EVEN, a)));\n  equal_offsetcoord(\"conversion_roundtrip even-q\", b, qoffset_from_cube(EVEN, qoffset_to_cube(EVEN, b)));\n  equal_hex(\"conversion_roundtrip odd-q\", a, qoffset_to_cube(ODD, qoffset_from_cube(ODD, a)));\n  equal_offsetcoord(\"conversion_roundtrip odd-q\", b, qoffset_from_cube(ODD, qoffset_to_cube(ODD, b)));\n  equal_hex(\"conversion_roundtrip even-r\", a, roffset_to_cube(EVEN, roffset_from_cube(EVEN, a)));\n  equal_offsetcoord(\"conversion_roundtrip even-r\", b, roffset_from_cube(EVEN, roffset_to_cube(EVEN, b)));\n  equal_hex(\"conversion_roundtrip odd-r\", a, roffset_to_cube(ODD, roffset_from_cube(ODD, a)));\n  equal_offsetcoord(\"conversion_roundtrip odd-r\", b, roffset_from_cube(ODD, roffset_to_cube(ODD, b)));\n}\n\nfunction test_offset_from_cube() {\n  equal_offsetcoord(\"offset_from_cube even-q\", OffsetCoord(1, 3), qoffset_from_cube(EVEN, Hex(1, 2, -3)));\n  equal_offsetcoord(\"offset_from_cube odd-q\", OffsetCoord(1, 2), qoffset_from_cube(ODD, Hex(1, 2, -3)));\n}\n\nfunction test_offset_to_cube() {\n  equal_hex(\"offset_to_cube even-\", Hex(1, 2, -3), qoffset_to_cube(EVEN, OffsetCoord(1, 3)));\n  equal_hex(\"offset_to_cube odd-q\", Hex(1, 2, -3), qoffset_to_cube(ODD, OffsetCoord(1, 2)));\n}\n\nfunction test_doubled_roundtrip() {\n  const a = Hex(3, 4, -7);\n  const b = DoubledCoord(1, -3);\n  equal_hex(\"conversion_roundtrip doubled-q\", a, qdoubled_to_cube(qdoubled_from_cube(a)));\n  equal_doubledcoord(\"conversion_roundtrip doubled-q\", b, qdoubled_from_cube(qdoubled_to_cube(b)));\n  equal_hex(\"conversion_roundtrip doubled-r\", a, rdoubled_to_cube(rdoubled_from_cube(a)));\n  equal_doubledcoord(\"conversion_roundtrip doubled-r\", b, rdoubled_from_cube(rdoubled_to_cube(b)));\n}\n\nfunction test_doubled_from_cube() {\n  equal_doubledcoord(\"doubled_from_cube doubled-q\", DoubledCoord(1, 5), qdoubled_from_cube(Hex(1, 2, -3)));\n  equal_doubledcoord(\"doubled_from_cube doubled-r\", DoubledCoord(4, 2), rdoubled_from_cube(Hex(1, 2, -3)));\n}\n\nfunction test_doubled_to_cube() {\n  equal_hex(\"doubled_to_cube doubled-q\", Hex(1, 2, -3), qdoubled_to_cube(DoubledCoord(1, 5)));\n  equal_hex(\"doubled_to_cube doubled-r\", Hex(1, 2, -3), rdoubled_to_cube(DoubledCoord(4, 2)));\n}\n\nfunction test_all() {\n  test_hex_arithmetic();\n  test_hex_direction();\n  test_hex_diagonal();\n  test_hex_distance();\n  test_hex_rotate_right();\n  test_hex_rotate_left();\n  test_hex_round();\n  test_hex_linedraw();\n  test_layout();\n  test_offset_roundtrip();\n  test_offset_from_cube();\n  test_offset_to_cube();\n  test_doubled_roundtrip();\n  test_doubled_from_cube();\n  test_doubled_to_cube();\n}\n\n\n\ntest_all()\n\n// Exports for node/browserify modules:\n\n","import { useRef, useEffect } from 'react'\n\nconst useCanvas = (draw, options={fps: 20}) => {\n\n    const canvasRef = useRef(null)\n    const fps = options.fps;\n\n    useEffect(() => {\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        let frameCount = 0\n        let animationFrameId\n        const render = () => {\n            frameCount++\n            draw(context, frameCount)\n            resizeCanvasToDisplaySize(canvas);\n            resizeCanvas(canvas);\n            setTimeout(() => {\n                animationFrameId = window.requestAnimationFrame(render);\n            }, 1000 / fps);\n        }\n        render()\n        return () => {\n            window.cancelAnimationFrame(animationFrameId)\n        }\n    }, [draw])\n    return canvasRef\n}\nexport default useCanvas\n\nfunction resizeCanvas(canvas) {\n    const { width, height } = canvas.getBoundingClientRect()\n\n    if (canvas.width !== width || canvas.height !== height) {\n        const { devicePixelRatio:ratio=1 } = window\n        const context = canvas.getContext('2d')\n        canvas.width = width*ratio\n        canvas.height = height*ratio\n        context.scale(ratio, ratio)\n        return true\n    }\n\n    return false\n}\nfunction resizeCanvasToDisplaySize(canvas) {\n\n    const { width, height } = canvas.getBoundingClientRect()\n\n    if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width\n      canvas.height = height\n      return true // here you can return some usefull information like delta width and delta height instead of just true\n      // this information can be used in the next redraw...\n    }\n\n    return false\n  }\n","import useCanvas from './useCanvas'\n\nconst Canvas = props => {\n    const { draw } = props;\n    const canvasRef = useCanvas(draw, {fps: 3});\n    return <canvas ref={canvasRef} style={{\n       width: \"100%\",\n       height: \"100%\",\n       display: \"block\",\n       position: \"absolute\",\n       top: 0,\n       left: 0,\n       zIndex: -9999}} />\n}\n\nexport default Canvas\n","import Canvas from './Canvas'\nimport * as HEX from '../../shared/hexlib'\nimport { State } from '../../shared/model/state'\n\n\nconst orientation = HEX.orientation_pointy;\nconst layout = HEX.Layout(orientation, HEX.Point(10, 10), HEX.Point(500, 250))\n\nexport default function BackgroundCanvas() {\n    const state = new State();\n\n    const draw = (ctx, frameCount) => {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        ctx.fillStyle = \"#000000\";\n        state.apply(state.actions[Math.floor(Math.random() * state.actions.length)]);\n        for (const hex of state.hive.map.keys()) {\n            ctx.beginPath()\n            const corners = HEX.polygon_corners(layout, hex);\n            ctx.moveTo(corners[5].x + 50, corners[5].y + 50);\n            corners.forEach( p => {\n                ctx.lineTo(p.x + 50, p.y + 50);\n            })\n            ctx.fill();\n        }\n    }\n    return <Canvas draw={draw} />\n}\n","import { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n\nexport default function GameList( ) {\n    const [games, setGames] = useState([]);\n    useEffect( () => {\n        fetch('/game')\n            .then( resp => resp.json())\n            .then( data => setGames(data))\n            .catch( err => console.log(err))\n    }, [])\n    return (\n        <table>\n            {games.map( gid => {\n                return (\n                <tr key={gid}> \n                    <td> ID: {gid} </td>\n                    <td> <Link to = {{\n                        pathname: `/play/${gid}`,\n                        search: `?p1=remote&p2=local`\n                    }}> JOIN </Link></td>\n                </tr>\n                )\n            })}\n        </table>\n    )\n}","import BackgroundCanvas from '../lab/BackgroundCanvas';\nimport GameList from '../components/GameList';\n\nexport default function WelcomePage () {\n\n    return <div>\n        <h1> Welcome to HiveMind </h1>\n        <GameList />\n        <BackgroundCanvas />\n        </div>\n}\n","import Stone from '../canvas/Stone'\nimport { Canvas } from '@react-three/fiber'\nimport * as HEX from '../../shared/hexlib'\n\nexport default function WelcomeInsect() {\n\n    return (\n        <div style={{ position: \"absolute\", right: 0, height: '30vw' }}>\n            <Canvas camera={{ near: 0.1, far: 100 }} >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                <Stone\n                    hex={HEX.Hex(0, 0)}\n                    stone={ {\"team\": \"white\", \"insect\": \"bee\"}}\n                    />\n            </Canvas>\n        </div>\n    )\n}\n","import WelcomeInsect from '../components/WelcomeInsect';\n\nexport default function AboutPage() {\n    return <div>\n            <WelcomeInsect />\n            <iframe src=\"/README.html\" title=\"Readme\" style={{width: \"100%\", height: \"100%\", position: \"absolute\", border: \"none\"}} />\n        </div>\n}\n","import { State } from '../../shared/model/state'\n\nimport { useState } from 'react'\n\nimport Hive from '../canvas/Hive'\n\nconst Wrapped = () => {\n  const [state, setState] = useState(new State());\n  const [counter, setCounter] = useState(0);\n  const [iterationSteps, setIterationSteps] = useState(10);\n  const step = () => {\n    state.step()\n    setCounter(counter + 1);\n  }\n  const reset = () => {\n    setState(new State());\n    setCounter(0);\n  }\n  return (\n    <div>\n      <div>\n        <div> Step: {state.turnNumber}</div>\n        <button onClick={step}> Make a Step </button>\n        <button onClick={reset}> Reset </button>\n        <label>\n          How many automove steps:\n          <input value={iterationSteps} onChange={e => setIterationSteps(e.target.value)}/>\n        </label>\n        <button onClick={() => {\n          for (let i=0;i<iterationSteps;i++) {\n            state.step()\n          }\n          setCounter(counter + iterationSteps);\n\n        }}> AutoPlay </button>\n        <div>\n          Stones: {JSON.stringify(state.stones)}\n        </div>\n      </div>\n      <Hive hive={state.hive} highlighted={[]}/>\n    </div>\n  )\n}\n\nexport default function Test() {\n  return (\n    <Wrapped />\n  )\n}\n","import { useInteractiveController } from '../controllers/interactiveController';\nimport LocalGame from '../game/LocalGame';\n\n\n\nfunction InteractiveRandom() {\n    const p1 = useInteractiveController;\n    const p2 = useInteractiveController;\n    return <LocalGame p1={p1} p2={p2} />\n}\n\n\nexport default InteractiveRandom;","import TestHive from '../lab/TestHive';\nimport TestGame from '../lab/TestGame';\n\nexport default function DebugPage() {\n    return <div>\n                <TestGame />\n                <TestHive />\n            </div>\n}\n","import { Button, Modal, Container, Header, Form } from 'semantic-ui-react'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport uuid from 'uuid-random';\n\nexport default function CreateGameModal({ open, setOpen }) {\n    const [gameMode, setGameMode] = useState('local');\n    const [team, setTeam] = useState('red');\n    const createGame = (location) => {\n        const gid = uuid();\n        if (team === 'random') {\n            setTeam(Math.random() > 0.5 ? 'white' : 'black');\n        }\n        if (gameMode === 'online') {\n            fetch(`/game/${gid}`, {\n                method: 'POST'\n            }).catch( err => console.log(\"Failed to create game\", err))\n        }\n        return {\n            pathname: `/play/${gid}`,\n            search: `?team=${team}&mode=${gameMode}`\n        }\n    }\n    return (\n        <Modal\n            dimmer='blurring'\n            open={open}\n        >\n            <Modal.Header>Create a new Game of Hive</Modal.Header>\n            <Modal.Content>\n                <Container>\n                    <Form>\n                        <Header as=\"h3\">\n                            Play against\n                        </Header>\n                        <Form.Field>\n                            <Button.Group>\n                                <Button onClick={() => setGameMode('local')}>Yourself </Button>\n                                <Button.Or />\n                                <Button onClick={() => setGameMode('ai')}>AI </Button>\n                                <Button.Or />\n                                <Button onClick={() => setGameMode('online')}>Friend </Button>\n                            </Button.Group>\n                        </Form.Field>\n                        <Header as=\"h3\">\n                            Start as\n                        </Header>\n                        <Form.Field >\n                            <Button.Group >\n                                <Button onClick={() => setTeam('white')} color=\"red\">red </Button>\n                                <Button.Or />\n                                <Button onClick={() => setTeam('random')} color=\"violet\">random </Button>\n                                <Button.Or inverted />\n                                <Button onClick={() => setTeam('black')} color=\"blue\">blue </Button>\n                            </Button.Group>\n                        </Form.Field>\n                    </Form>\n                </Container>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button negative onClick={() => setOpen(false)}>\n                    Cancel\n                </Button>\n                <Button positive onClick={() => {\n                    setOpen(false);\n                }} as={Link} \n                to={createGame}>\n                    Create\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}","import { Button, Icon, Container, Menu, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport {useState} from 'react'\nimport CreateGameModal from '../components/CreateGameModal'\n\nexport default function Layout(props) {\n    const [active, setActive] = useState('Home');\n    const [createGameModalOpen, setCreateGameModalOpen] = useState(false);\n    const handleClick = (e, {name}) => setActive(name);\n    return (\n        <Container >\n            <Segment inverted>\n                <Menu compact inverted stackable pointing secondary>\n                    <Menu.Item header as={Link} to=\"/debug\" name='HiveMind'>\n                        <img src='/favicon/android-chrome-512x512.png' alt=\"logo\" />\n                    </Menu.Item>\n                    <Menu.Item as={Link} to=\"/\" name='Home' onClick={handleClick} active={active === 'Home'} />\n                    <Menu.Item as={Link} to='/about' name='About' onClick={handleClick} active={active==='About'} />\n                    <Menu.Item name='play'>\n                        <Button inverted icon labelPosition='left' onClick={() => setCreateGameModalOpen(true)} >\n                            <Icon name=\"plus square outline\" />\n                            Create a Game\n                        </Button>\n                    </Menu.Item>\n                    <Menu.Item as={Link} to='/play/test' name='Quick Play' onClick={handleClick} active={active==='Quick Play'} />\n                </Menu>\n            </Segment>\n            <CreateGameModal open={createGameModalOpen} setOpen={setCreateGameModalOpen} />\n            {props.children}\n\n        </Container>\n    )\n\n}\n","import { lazy, Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport WelcomePage from './pages/WelcomePage';\nimport AboutPage from './pages/AboutPage';\nimport DebugPage from './pages/DebugPage';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport Layout from './pages/Layout'\n\nconst GameManager = lazy(() => import('./game/GameManager'))\n\nexport default function App() {\n  return (\n      <Router>\n        <Layout>\n          <Suspense fallback={<div>Loading...</div>} >\n            <Switch>\n              <Route exact path=\"/\" component={WelcomePage} />\n              <Route path=\"/play/:gid\" component={GameManager} />\n              <Route exact path=\"/debug\" component={DebugPage} />\n              <Route exact path=\"/about\" component={AboutPage} />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './client/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","enum Insect {\n    BEE = 'bee',\n    SPIDER = 'spider',\n    ANT = 'ant',\n    GRASSHOPPER = 'grasshopper',\n    BEETLE = 'beetle',\n}\n\nexport default Insect;\n","enum Team {\n    WHITE = 'white',\n    BLACK = 'black',\n}\n\nexport default Team;\n","import { Hex, hex_compare } from '../hexlib';\nimport Stone from './stone';\n\nexport class Move {\n    origin: Hex;\n    destination: Hex;\n\n    constructor(origin?: Hex, destination?: Hex) {\n        this.origin = origin;\n        this.destination = destination;\n    }\n}\n\nexport class Drop {\n    stone: Stone;\n    destination: Hex;\n\n    constructor(stone?: Stone, destination?: Hex) {\n        this.stone = stone;\n        this.destination = destination;\n    }\n}\n\nexport function compareAction(a: Action, b: Action): boolean {\n    if ('origin' in a && 'origin' in b) {\n        return hex_compare(a.origin, b.origin) && hex_compare(a.destination, b.destination)\n    } else if ('stone' in a && 'stone' in b) {\n        return a.stone.team === b.stone.team && a.stone.insect === b.stone.insect && hex_compare(a.destination, b.destination)\n    } else if (b === Pass) return true;\n    else return false;\n}\n\nexport class Pass {};\n\nexport type Action = Drop | Move | Pass;\n","class HashMap {\n    map = new Map();\n    get(key){\n        return this.map.get(JSON.stringify(key));\n    }\n    set(key, value){\n        return this.map.set(JSON.stringify(key), value);\n    }\n    delete(key){\n        return this.map.delete(JSON.stringify(key));\n    }\n    has(key){\n      return this.map.has(JSON.stringify(key));\n    }\n    hiveHeight(key) {\n        if (this.map.has(key)) {\n            return this.get(key).length\n        } else {\n            return 0\n        }\n    }\n    hivePush(key, value){\n        if (this.map.has(key)) {\n            return this.map.get(key).push(value)\n        } else {\n            return this.map.set(key, [value])\n        }\n    }\n    hivePop(key){\n        let arr = this.map.get(key)\n        const res = arr.pop()\n        if (arr.length === 0) {\n            this.map.delete(key)\n        }\n        return res\n    }\n    keys() {\n        return Array.from(this.map.keys()).map(k => JSON.parse(k))\n    }\n}\nclass HashSet {\n    set: Set<string> = new Set();\n    add(value) {\n        return this.set.add(JSON.stringify(value));\n    }\n    has(value) {\n      return this.set.has(JSON.stringify(value));\n    }\n    values() {\n      return Array.from(this.set.values()).map(val => JSON.parse(val))\n    }\n}\n\nexport {HashMap, HashSet}","import Insect from './insects';\nimport Team from './teams';\nimport Stone from './stone';\nimport * as HEX from '../hexlib';\nimport { HashMap, HashSet } from '../hashmap';\n\n\nexport class Hive {\n    map: HashMap;\n    root: HEX.Hex;\n    constructor() {\n        this.map = new HashMap();\n    }\n    at(hex: HEX.Hex) {\n        const ar = this.map.get(hex)\n        return ar[ar.length - 1]\n    }\n\n    removeStone(hex: HEX.Hex) {\n        this.map.get(hex).pop()\n        if (!this.map.get(hex).length) {\n            this.map.delete(hex)\n        }\n    }\n\n    addStone(hex: HEX.Hex, stone: Stone) {\n        this.root = hex\n        if (!this.map.has(hex)) this.map.set(hex, [stone])\n        else this.map.get(hex).push(stone)\n    }\n\n    gameResult(): Array<boolean> {\n        let whiteLost = false\n        let blackLost = false\n        for (const hex of this.map.keys()) {\n            const stone = this.map.get(hex)[0]\n            if (stone.insect === Insect.BEE) {\n                if (this.neighbors(hex).length === 6) {\n                    if (stone.team === Team.WHITE) whiteLost = true\n                    else blackLost = true\n                }\n            }\n        }\n        return [whiteLost, blackLost];\n    }\n\n    neighbors(hex: HEX.Hex): Array<HEX.Hex> {\n        return HEX.hex_neighbors(hex).filter(n => this.map.has(n))\n    }\n    height(hex: HEX.Hex): number {\n        if (this.map.has(hex)) return this.map.get(hex).length\n        return 0\n    }\n    generateSingleWalks(hex: HEX.Hex, ignore=null): Array<HEX.Hex> {\n        let result = []\n        for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n            if (this.map.has(b)) continue\n            if (ignore === null) {\n                if (this.map.has(a) !== this.map.has(c)) result.push(b)\n            } else {\n                // ignore was probably not working because object comparison\n                if ((this.map.has(a) && !HEX.hex_compare(a, ignore)) !== (this.map.has(c) && !HEX.hex_compare(c, ignore))) {      result.push(b)\n                }\n            }\n        }\n        return result\n    }\n    generateWalks(start: HEX.Hex, target=-1): Array<HEX.Hex> {\n        let visited = new HashSet()\n        let distance = new HashMap()\n        let queue = []\n        let result = []\n        queue.push(start)\n        distance.set(start, 0)\n        while (queue.length) {\n            const vertex = queue.shift()\n            visited.add(vertex)\n            for (const n of this.generateSingleWalks(vertex, start)) {\n                if (visited.has(n)) continue\n                distance.set(n, distance.get(vertex) + 1)\n                queue.push(n)\n            }\n            if (target === -1 && !HEX.hex_compare(vertex, start)) {\n              result.push(vertex)\n            } else {\n                let d = distance.get(vertex)\n                if (d > target) continue\n                if (d === target) result.push(vertex)\n            }\n            \n        }\n        return result\n    }\n    generateSpiderWalks(hex: HEX.Hex): Array<HEX.Hex> {\n        return this.generateWalks(hex, 3)\n    }\n    generateJumps(hex: HEX.Hex): Array<HEX.Hex> {\n        let result = []\n        for (const offset of HEX.hex_directions) {\n            if (this.map.has(HEX.hex_add(hex, offset))) {\n                let i = 2\n                while (this.map.has(HEX.hex_add(hex, HEX.hex_scale(offset,i)))) i++\n                result.push(HEX.hex_add(hex, HEX.hex_scale(offset,i)))\n            }\n        }\n        return result\n    }\n    generateClimbs(hex: HEX.Hex): Array<HEX.Hex> {\n        let result = []\n        let hh = this.height(hex)\n        if (hh > 1) {\n            for (const [a, b, c] of HEX.hex_circle_iterator(hex)){\n                if (this.height(b) < hh) {\n                    if ((this.height(a) < hh) || (this.height(c) < hh)) result.push(b)\n                }\n            }\n        } else result.concat(this.generateSingleWalks(hex))\n        for (const [a, b, c] of HEX.hex_circle_iterator(hex)) {\n            let ha = this.height(a)\n            let hb = this.height(b)\n            let hc = this.height(c)\n            if ((hb >= hh) && !(ha > hh && hc > hh)) result.push(b)\n        }\n        return result\n    }\n\n    _checkNeighborTeam(hex: HEX.Hex, team: Team): boolean {\n        return this.neighbors(hex).every(n => this.at(n).team === team)\n    }\n    generateDrops(team: Team): Array<HEX.Hex> {\n        let candidates = new HashSet()\n        for (const hex of this.map.keys()) {\n            HEX.hex_neighbors(hex)\n              .filter(e => !this.map.has(e))\n              .forEach(e => candidates.add(e))\n        }\n        const dropos: HEX.Hex[] = candidates.values()\n        return dropos.filter(e => this._checkNeighborTeam(e, team))\n    }\n\n    _oneHive(): HashSet {\n        let lowLink = new HashMap()\n        let visited = new HashSet()\n        let index = new HashMap()\n        let articulation_points = new HashSet()\n        const dfs = (node: HEX.Hex, parent: HEX.Hex, counter: number) => {\n            visited.add(node)\n            counter++\n            index.set(node, counter)\n            lowLink.set(node, counter)\n            let children = 0\n            for (const n of this.neighbors(node)) {\n                if (parent && HEX.hex_compare(n, parent)) continue\n                if (visited.has(n)) lowLink.set(node, Math.min(lowLink.get(node), index.get(n)))\n                else {\n                    dfs(n, node, counter)\n                    lowLink.set(node, Math.min(lowLink.get(node), lowLink.get(n)))\n                    if (lowLink.get(n) >= index.get(node) && parent !== null) articulation_points.add(node)\n                    children++\n                }\n            }\n            if (parent === null && children >= 2) articulation_points.add(node)\n        }\n        // Need call because otherwise this is not bound in the nested function>\n        if (this.root !== undefined) dfs.call(this, this.root, null, 0)\n        return articulation_points\n    }\n\n    generateMovesFrom(hex: HEX.Hex): Array<HEX.Hex> {\n        // insects.BEE ... instead of 0 ... causes error. Why?\n        //\n        if (this.map.has(hex)) {\n            const moveMap = new Map([\n                [Insect.BEE, this.generateSingleWalks],\n                [Insect.SPIDER, this.generateSpiderWalks],\n                [Insect.ANT, this.generateWalks],\n                [Insect.GRASSHOPPER, this.generateJumps],\n                [Insect.BEETLE, this.generateClimbs]\n            ]);\n            return moveMap.get(this.at(hex).insect).call(this, hex)\n        } else {\n            console.log(`Cannot generate moves: no stones at ${hex}`)\n            return [];\n        }\n    }\n\n    generateMoves(team: Team): Array<Array<HEX.Hex>> {\n        let result = []\n        const articulation_points = this._oneHive()\n        for (const hex of this.map.keys()) {\n            if (this.at(hex).team === team) {\n                if (this.height(hex) > 1 || !articulation_points.has(hex)) {\n                    this.generateMovesFrom(hex).forEach((dest) => {\n                        result.push([hex, dest])\n                    })\n                }\n            }\n        }\n        return result\n    }\n}\n","import Insect from \"./insects\";\nimport Stone from \"./stone\";\nimport Team from \"./teams\";\nimport * as HEX from \"../hexlib\";\nimport {Move, Drop, Pass, Action, compareAction} from \"./action\";\nimport {Hive} from \"./hive\";\n\n\nexport class State {\n    hive: Hive;\n    turnNumber: number;\n    _stones: Map<Team, Array<Stone>>;\n    _beeMove: Map<Team, boolean>;\n    _actions: Array<Action>;\n\n    startingInsects: Array<Insect> = [\n        Insect.BEE,\n        Insect.SPIDER,\n        Insect.SPIDER,\n        Insect.ANT,\n        Insect.ANT,\n        Insect.ANT,\n        Insect.GRASSHOPPER,\n        Insect.GRASSHOPPER,\n        Insect.GRASSHOPPER,\n        Insect.BEETLE,\n        Insect.BEETLE\n    ]\n\n    constructor() {\n        this.hive = new Hive();\n        this.turnNumber = 0;\n        this._beeMove = new Map([\n            [Team.WHITE, false],\n            [Team.BLACK, false]\n        ])\n        this._stones = new Map();\n        for (const team of [Team.WHITE, Team.BLACK]) {\n            this._stones.set(team, this.startingInsects.map(insect => new Stone(insect, team)))\n        }\n    }\n    get stones(): Array<Stone> {\n        return this._stones.get(this.team);\n    }\n\n    get team(): Team {\n        return this.turnNumber % 2 === 0 ? Team.WHITE : Team.BLACK\n    }\n    get gameOver(): boolean {\n        if (this.result.some( (x) => x)) {\n            return true;\n        }\n        return false;\n    }\n    get result(): Array<boolean> {\n        return this.hive.gameResult()\n    }\n    get moveAllowed(): boolean {\n        return this._beeMove.get(this.team)\n    }\n    generateDrops(): Array<HEX.Hex> {\n        if (this.turnNumber === 0) return [HEX.Hex(0, 0)];\n        else if (this.turnNumber === 1) return [HEX.Hex(0, -1)];\n        return this.hive.generateDrops(this.team)\n    }\n    _getActions(): Array<Action> {\n        let opts = []\n        const dropStonesForTeam = this.stones.map( stone => stone.insect );\n        const uniqueInsects = new Set(dropStonesForTeam);\n        const dropStones = Array.from(uniqueInsects)\n                                .map(insect => new Stone(insect, this.team));\n        if (this.turnNumber >= 6 && !this.moveAllowed) {\n            // Forced bee drop\n            this.hive.generateDrops(this.team)\n                .forEach(d => opts.push(new Drop(new Stone(Insect.BEE, this.team), d)))\n        } else if (dropStones.length) {\n            // Drops are allowed\n            this.generateDrops()\n                .forEach(dropHex => dropStones\n                    .forEach(dropInsect => opts.push(new Drop(dropInsect, dropHex))))\n        }\n        if (this.moveAllowed) {\n            // Moves allowed\n            this.hive.generateMoves(this.team).forEach(([origin, dest]) => {\n                opts.push(new Move(origin, dest))\n            })\n        }\n        if (opts.length) return opts\n        else return [Pass]\n    }\n    get actions(): Array<Action> {\n        if (!this._actions) this._actions = this._getActions()\n        return this._actions\n    }\n\n    isLegal(action: Action): boolean {\n        const res = this.actions.some(otherAction => compareAction(action, otherAction))\n        return res;\n    }\n    apply(action: Action): State {\n        // No check for legal action!\n        // TODO apparently copying/cloning objects is not trivial in JS\n        // So maybe just create new instance with the data as arguments\n        // let newState = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n        // State is mutable now, apply updates inplace instead of returning a new instance\n        let stone\n        if ('origin' in action) {\n            // Remove the stone from the old position and add it at the new one\n            stone = this.hive.at(action.origin)\n            this.hive.removeStone(action.origin)\n            this.hive.addStone(action.destination, stone)\n        } else if ('stone' in action) {\n            stone = action.stone\n            if (stone.insect === Insect.BEE) {\n                // Update that the bee is dropped\n                this._beeMove.set(this.team, true)\n            }\n            // Remove the dropped stone from the availables and add it to the hive\n            // TODO the stone is not removed because objects do not compare equal for values\n            let index = -1;\n            this.stones.forEach((s, i) => {\n              if (stone.insect === s.insect) index = i\n            })\n            this.stones.splice(index, 1)\n            this.hive.addStone(action.destination, stone)\n        }\n        delete this._actions\n        this.turnNumber++\n        return this;\n    }\n\n    undo(action: Action): State {\n        let stone\n        if ('origin' in action) {\n            // Remove the stone from the new position and add it at the old one\n            stone = this.hive.at(action.destination)\n            this.hive.removeStone(action.destination)\n            this.hive.addStone(action.origin, stone)\n        } else if ('stone' in action) {\n            stone = action.stone\n            if (stone.insect === Insect.BEE) {\n                this._beeMove.set(this.team, false)\n            }\n            this.stones.push(stone);\n            this.hive.removeStone(action.destination);\n        }\n        delete this._actions\n        this.turnNumber--\n        return this;\n    }\n\n    step(policy=randomPolicy): State {\n        return this.apply(policy(this.actions))\n    }\n\n    allowedToMove(hex: HEX.Hex): boolean {\n        // Only needed for Frontend\n        if (this.moveAllowed) {\n            for (const action of this.actions) {\n                if (action instanceof Move) {\n                    if (HEX.hex_compare(action.origin, hex)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    allowedToDrop(insect: Insect): boolean {\n        // Only needed for Fronted\n        for (const action of this.actions) {\n            if (\"stone\" in action) {\n                if (action.stone.insect === insect) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    getDestinations(action: (Move | Drop), src): Array<[HEX.Hex, number]> {\n        let opts = [];\n        if (action instanceof Move) {\n            opts = this.hive.generateMovesFrom(src)\n                .map(h => [h, this.hive.height(h)]);\n        } else if (action instanceof Drop) {\n            opts = this.generateDrops()\n                .map(h => [h, 0]);\n        }\n        return opts;\n    }\n}\n\nfunction randomPolicy(actions: Array<Action>): Action {\n    return actions[Math.floor(Math.random() * actions.length)]\n}\n"],"sourceRoot":""}